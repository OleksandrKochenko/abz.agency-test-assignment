{
  "openapi": "3.0.0",
  "info": {
    "title": "REST API for user operations",
    "description": "Abz.agency test assignment API documentation",
    "contact": {
      "name": "Oleksandr Kochenko",
      "url": "https://oleksandrkochenko.github.io/CV/",
      "email": "kochenko.fop@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://abz-agency-ta.onrender.com/",
      "description": "API docs on web-service"
    },
    {
      "url": "http://localhost:3000/",
      "description": "API docs on localhost"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User authorisation"
    },
    {
      "name": "Api",
      "description": "User operations"
    }
  ],
  "paths": {
    "/auth/token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "returns registration token",
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "operation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "500": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "register user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/auth_users_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "409": {
            "description": "conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_409"
                }
              }
            }
          },
          "422": {
            "description": "body validation fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_422"
                }
              }
            }
          },
          "500": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Api"
        ],
        "description": "returns users",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of skipped documents",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "20"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "documents per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Api"
        ],
        "description": "returns users",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of user to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "6550a1d4c7a23f30181b253e",
                "6550a1d4c7a23f30181b2542",
                "6550a1d4c7a23f30181b2545"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/positions": {
      "get": {
        "tags": [
          "Api"
        ],
        "description": "returns positions",
        "operationId": "getPositions",
        "responses": {
          "200": {
            "description": "operation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65538751b374715901fe334a"
          },
          "name": {
            "type": "string",
            "example": "Li Wein"
          },
          "email": {
            "type": "string",
            "example": "l.wein@mail.com"
          },
          "phone": {
            "type": "string",
            "example": "+380990555555"
          },
          "position": {
            "type": "string",
            "example": "Developer"
          },
          "position_id": {
            "type": "string",
            "example": "654ff174799fdb1936ecc4cb"
          },
          "photo": {
            "type": "string",
            "example": "http://res.cloudinary.com/dvloxectq/image/upload/v1699972944/users/gocbynfvtecaobtfrbvd.jpg"
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "654ff14b83c48061481699b3"
          },
          "title": {
            "type": "string",
            "example": "Designer"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Page not found"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Server error"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": true
          },
          "token": {
            "type": "string",
            "description": "registration token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbklkIjoiOG93dko2SWNMREEtaXdfaHZQVThTIiwiaWF0IjoxNjk5OTU4NTA0LCJleHAiOjE2OTk5NjA5MDR9.ikSm4LTRPTnzAHw-73-GszQmgXzC64fXjnUHbqXXYWU"
          }
        }
      },
      "auth_users_body": {
        "required": [
          "email",
          "name",
          "password",
          "phone",
          "photo",
          "position_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Username should contain 2-60 characters",
            "example": "John Johnson"
          },
          "email": {
            "type": "string",
            "description": "User email, must be a valid email",
            "format": "email",
            "example": "test.user@mail.com"
          },
          "phone": {
            "type": "string",
            "description": "Phone number should start with code +380 followed by 9 numbers",
            "format": "phone",
            "example": "+380990010203"
          },
          "password": {
            "type": "string",
            "description": "Min 6 characters",
            "format": "password",
            "example": "Ng67$32_"
          },
          "position_id": {
            "type": "string",
            "description": "Position id should be valid MongoDB object id",
            "example": "654ff174799fdb1936ecc4cb"
          },
          "photo": {
            "type": "string",
            "description": "Minimum size - 70x70px. Available only jpeg/jpg type. Maximum file size - 5 Mb.",
            "format": "binary"
          }
        }
      },
      "inline_response_201": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": true
          },
          "user_id": {
            "type": "string",
            "description": "created user id",
            "example": "65538751b374715901fe334a"
          },
          "message": {
            "type": "string",
            "description": "operation message",
            "example": "New user successfully registered"
          }
        }
      },
      "inline_response_401": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "operation message",
            "example": "Unauthorized: not valid token"
          }
        }
      },
      "inline_response_409": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "operation message",
            "example": "User with this phone or email already exist"
          }
        }
      },
      "inline_response_422": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "operation message",
            "example": "[\"invalid field length\",\"name/email/phone/password/position_id field required\",\"invalid phone/email\",\"file upload is required\",\"unsupported image type\",\"invalid image resolution\",\"the photo may not be greater than 5 Mbytes\"]"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "operation status",
            "example": true
          },
          "page": {
            "type": "number",
            "description": "current page",
            "example": 1
          },
          "total_pages": {
            "type": "number",
            "description": "total pages",
            "example": 10
          },
          "total_users": {
            "type": "number",
            "description": "total users",
            "example": 48
          },
          "count": {
            "type": "number",
            "description": "documents per page",
            "example": 5
          },
          "links": {
            "$ref": "#/components/schemas/inline_response_200_1_links"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            }
          }
        }
      },
      "inline_response_200_1_links": {
        "type": "object",
        "properties": {
          "next_url": {
            "type": "string",
            "nullable": true,
            "example": "/api/users?page=2&count=5"
          },
          "prev_url": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}